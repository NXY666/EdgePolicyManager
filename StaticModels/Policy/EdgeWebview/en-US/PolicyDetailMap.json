{"BrowserExecutableFolder":{"Name":"BrowserExecutableFolder","ShortDescription":"Configure the location of the browser executable folder","SupportVersion":"Microsoft Edge version 87, Windows 7 or later","Description":"This policy configures WebView2 applications to use the WebView2 Runtime in the specified path. The folder should contain the following files: msedgewebview2.exe, msedge.dll, and so on.\n\nTo set the value for the folder path, provide a Value name and Value pair. Set value name to the Application User Model ID or the executable file name. You can use the \"\\*\" wildcard as value name to apply to all applications.\n\nExample value:\n\nName: *, Value: C:\\Program Files\\Microsoft Edge WebView2 Runtime Redistributable 85.0.541.0 x64","DataType":"Unknown","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"BrowserExecutableFolder","DefaultValue":null,"ValueKind":"N/A"}},"ChannelSearchKind":{"Name":"ChannelSearchKind","ShortDescription":"Configure the WebView2 release channel search kind","SupportVersion":"Microsoft Edge version 121, Windows 7 or later","Description":"This policy configures the channel search kind for WebView2 applications. By default the channel search kind is 0, which is equivalent to the \"Most Stable\" search kind in the corresponding WebView2 API; This indicates that WebView2 environment creation should search for a release channel from the most to least stable: WebView2 Runtime, Beta, Dev, and Canary.\n\nTo reverse the default search order and use the \"Least Stable\" search kind, set this policy to 1.\n\nTo set the value for the channel search kind, provide a Value name and Value pair. Set value name to the Application User Model ID or the executable file name. You can use the \"\\*\" wildcard as value name to apply to all applications.\n\nExample value:\n\nName: WebView2APISample.exe, Value: 1","DataType":"Unknown","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"ChannelSearchKind","DefaultValue":null,"ValueKind":"N/A"}},"ReleaseChannelPreference":{"Name":"ReleaseChannelPreference","ShortDescription":"Set the release channel search order preference (deprecated)","SupportVersion":"Microsoft Edge version 87, Windows 7 or later","Description":"DEPRECATED: This policy is deprecated. It is currently supported but will become obsolete in a future release.\n\nThis policy is deprecated in favor of ChannelSearchKind, which has the same functionality, and will become obsolete in 124 release. The default channel search order is WebView2 Runtime, Beta, Dev, and Canary.\n\nTo reverse the default search order, set this policy to 1.\n\nTo set the value for the release channel preference, provide a Value name and Value pair. Set value name to the Application User Model ID or the executable file name. You can use the \"\\*\" wildcard as value name to apply to all applications.\n\nExample value:\n\nName: *, Value: 1","DataType":"Unknown","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"ReleaseChannelPreference","DefaultValue":null,"ValueKind":"N/A"}},"ReleaseChannels":{"Name":"ReleaseChannels","ShortDescription":"Configure the WebView2 release channels","SupportVersion":"Microsoft Edge version 121, Windows 7 or later","Description":"This policy configures the release channel options for WebView2 applications. To configure these options, set the value to a comma-separated string of integers, which map to the `COREWEBVIEW2\\_RELEASE\\_CHANNELS` values from the corresponding WebView2 API. These values are: WebView2 Runtime (0), Beta (1), Dev (2), and Canary (3). By default, environment creation searches for channels from most to least stable, using the first channel found on the device. When `ReleaseChannels` is provided, environment creation will only search for the channels specified in the set. For example, the values \"0,2\" and \"2,0\" indicate that environment creation should only search for Dev channel and the WebView2 Runtime, using the order indicated by `ChannelSearchKind`. Environment creation attempts to interpret each integer and treats any invalid entry as the Stable channel. Set `ChannelSearchKind` to reverse the search order so environment creation searches for least stable build first. If both `BrowserExecutableFolder` and `ReleaseChannels` are provided, the `BrowserExecutableFolder` takes precedence, regardless of whether the channel of `BrowserExecutableFolder` is included in the `ReleaseChannels`.\n\nTo set the value for release channels, provide a Value name and Value pair. Set the value name to the Application User Model ID or the executable file name. You can use the \"\\*\" wildcard as value name to apply to all applications.\n\nExample value:\n\nName: WebView2APISample.exe, Value: 0,1,2","DataType":"Unknown","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"ReleaseChannels","DefaultValue":null,"ValueKind":"N/A"}},"AccessControlAllowMethodsInCORSPreflightSpecConformant":{"Name":"AccessControlAllowMethodsInCORSPreflightSpecConformant","ShortDescription":"Make Access-Control-Allow-Methods matching in CORS preflight spec conformant","SupportVersion":"Microsoft Edge version 123, Windows 7 or later","Description":"This policy controls whether request methods are uppercased when matching with Access-Control-Allow-Methods response headers in CORS preflight.\n\nIf you disable this policy, request methods are uppercased. This is the behavior on or before Microsoft Edge 108.\n\nIf you enable or don't configure this policy, request methods are not uppercased, unless matching case-insensitively with DELETE, GET, HEAD, OPTIONS, POST, or PUT.\n\nThis would reject fetch(url, {method: 'Foo'}) + \"Access-Control-Allow-Methods: FOO\" response header,\nand would accept fetch(url, {method: 'Foo'}) + \"Access-Control-Allow-Methods: Foo\" response header.\n\nNote: request methods \"post\" and \"put\" are not affected, while \"patch\" is affected.\n\nThis policy is intended to be temporary and will be removed in the future.","DataType":"Boolean","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"AccessControlAllowMethodsInCORSPreflightSpecConformant","DefaultValue":null,"ValueKind":"REG_DWORD"}},"BlockTruncatedCookies":{"Name":"BlockTruncatedCookies","ShortDescription":"Block truncated cookies (obsolete)","SupportVersion":"Microsoft Edge version 123-131, Windows 7 or later","Description":"OBSOLETE: This policy is obsolete and doesn't work after Microsoft Edge 131.\n\nThis policy provides a temporary opt-out for changes to how Microsoft Edge handles cookies set via JavaScript that contain certain control characters (NULL, carriage return, and line feed).\nPreviously, the presence of any of these characters in a cookie string would cause it to be truncated but still set.\nNow, the presence of these characters will cause the whole cookie string to be ignored.\n\nIf you enable or don't configure this policy, the new behavior is enabled.\n\nIf you disable this policy, the old behavior is enabled.\n\nThis policy is obsolete because this policy was originally implemented as a safety measure in case of breakage, but none have been reported.","DataType":"Boolean","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"BlockTruncatedCookies","DefaultValue":null,"ValueKind":"REG_DWORD"}},"ZstdContentEncodingEnabled":{"Name":"ZstdContentEncodingEnabled","ShortDescription":"Enable zstd content encoding support (obsolete)","SupportVersion":"Microsoft Edge version 125-137, Windows 7 or later","Description":"OBSOLETE: This policy is obsolete and doesn't work after Microsoft Edge 137.\n\nThis policy controls whether Microsoft Edge supports Zstandard (zstd) content encoding.\n\nEnabled – Edge advertises zstd in the Accept-Encoding request header and can decompress responses encoded with zstd.\n\nDisabled – Edge does not advertise or support zstd content encoding.\n\nNot configured – The default behavior is to enable support for zstd content encoding.\n\nNOTE:\nThis policy has been made obsolete starting with Microsoft Edge version 138 because Microsoft Edge now always supports zstd content encoding.","DataType":"Boolean","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"ZstdContentEncodingEnabled","DefaultValue":null,"ValueKind":"REG_DWORD"}},"ExperimentationAndConfigurationServiceControl":{"Name":"ExperimentationAndConfigurationServiceControl","ShortDescription":"Control communication with the Experimentation and Configuration Service","SupportVersion":"Microsoft Edge version 97, Windows 7 or later","Description":"The Experimentation and Configuration Service is used to deploy Experimentation and Configuration payloads to the client.\n\nExperimentation payload consists of a list of early in development features that Microsoft is enabling for testing and feedback.\n\nConfiguration payload consists of a list of recommended settings that Microsoft wants to deploy to optimize the user experience.\n\nConfiguration payload may also contain a list of actions to take on certain domains for compatibility reasons. For example, the browser may override the User Agent string on a website if that website is broken. Each of these actions is intended to be temporary while Microsoft tries to resolve the issue with the site owner.\n\nIf you set this policy to 'FullMode', the full payload is downloaded from the Experimentation and Configuration Service. This includes both the experimentation and configuration payloads.\n\nIf you set this policy to 'ConfigurationsOnlyMode', only the configuration payload is downloaded.\n\nIf you set this policy to 'RestrictedMode', the communication with the Experimentation and Configuration Service is stopped completely. Microsoft does not recommend this setting.\n\nIf you don't configure this policy on a managed device, the behavior on Beta and Stable channels is the same as the 'ConfigurationsOnlyMode'. On Canary and Dev channels the behavior is the same as 'FullMode'.\n\nIf you don't configure this policy on an unmanaged device, the behavior is the same as the 'FullMode'.\n\nPolicy options mapping:\n\n* FullMode (2) = Retrieve configurations and experiments\n\n* ConfigurationsOnlyMode (1) = Retrieve configurations only\n\n* RestrictedMode (0) = Disable communication with the Experimentation and Configuration Service\n\nUse the preceding information when configuring this policy.","DataType":"Integer","DataOptions":[{"Name":"Retrieve configurations and experiments","Value":2},{"Name":"Retrieve configurations only","Value":1},{"Name":"Disable communication with the Experimentation and Configuration Service","Value":0}],"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"ExperimentationAndConfigurationServiceControl","DefaultValue":null,"ValueKind":"REG_DWORD"}},"ForcePermissionPolicyUnloadDefaultEnabled":{"Name":"ForcePermissionPolicyUnloadDefaultEnabled","ShortDescription":"Controls whether unload event handlers can be disabled.","SupportVersion":"Microsoft Edge version 118, Windows 7 or later","Description":"unload event handlers are being deprecated. Whether they fire depends on the unload Permissions-Policy.\nCurrently, they are allowed by policy by default. In the future they will gradually move to being disallowed by default and sites must explicitly enable them using Permissions-Policy headers.\nThis enterprise policy can be used to opt out of this gradual deprecation by forcing the default to stay enabled.\n\nPages might depend on unload event handlers to save data or signal the end of a user session to the server.\nThis is not recommended because it's unreliable and impacts performance by blocking use of BackForwardCache.\nRecommended alternatives exist, but the unload event has been used for a long time. Some applications might still rely on them.\n\nIf you disable this policy or don't configure it, unload event handlers will gradually be deprecated in-line with the deprecation rollout and sites which don't set Permissions-Policy header will stop firing `unload` events.\n\nIf you enable this policy then unload event handlers will continue to work by default.","DataType":"Boolean","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"ForcePermissionPolicyUnloadDefaultEnabled","DefaultValue":null,"ValueKind":"REG_DWORD"}},"HttpAllowlist":{"Name":"HttpAllowlist","ShortDescription":"HTTP Allowlist","SupportVersion":"Microsoft Edge version 123, Windows 7 or later","Description":"Setting the policy specifies a list of hostnames or hostname patterns (such as '[\\*.]example.com') that will not be upgraded to HTTPS. Organizations can use this policy to maintain access to servers that do not support HTTPS, without needing to disable \"AutomaticHttpsDefault\" or \"HttpsUpgradesEnabled\".\n\nSupplied hostnames must be canonicalized: Any IDNs must be converted to their A-label format, and all ASCII letters must be lowercase.\n\nBlanket host wildcards (i.e., \"\\*\" or \"[\\*]\") are not allowed. Instead, HTTPS-First Mode and HTTPS Upgrades should be explicitly disabled via their specific policies.\n\nNote: This policy does not apply to HSTS upgrades.\n\nExample value:\n\ntestserver.example.com\n[\\*.]example.org","DataType":"Unknown","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"HttpAllowlist","DefaultValue":null,"ValueKind":"N/A"}},"NewBaseUrlInheritanceBehaviorAllowed":{"Name":"NewBaseUrlInheritanceBehaviorAllowed","ShortDescription":"Allows enabling the feature NewBaseUrlInheritanceBehavior (obsolete)","SupportVersion":"Microsoft Edge version 123-135, Windows 7 or later","Description":"OBSOLETE: This policy is obsolete and doesn't work after Microsoft Edge 135.\n\nNewBaseUrlInheritanceBehavior is a Microsoft Edge feature that causes about:blank and about:srcdoc frames to consistently inherit their base url values via snapshots of their initiator's base url.\n\nIf you disable this policy, it prevents users or Microsoft Edge variations from enabling NewBaseUrlInheritanceBehavior, in case compatibility issues are discovered.\n\nIf you enable or don't configure this policy, it allows enabling NewBaseUrlInheritanceBehavior.\n\nThe policy has been obsoleted starting from Microsoft Edge version 136, but the NewBaseUrlInheritanceBehaviorAllowed feature was removed in Microsoft Edge version 123.","DataType":"Boolean","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"NewBaseUrlInheritanceBehaviorAllowed","DefaultValue":null,"ValueKind":"REG_DWORD"}},"NewPDFReaderWebView2List":{"Name":"NewPDFReaderWebView2List","ShortDescription":"Enable built-in PDF reader powered by Adobe Acrobat for WebView2","SupportVersion":"Microsoft Edge version 116, Windows 7 or later","Description":"This policy configures WebView2 applications to launch the new version of the PDF reader that's powered by Adobe Acrobat's PDF reader. The new PDF reader ensures that there's no loss of functionality and delivers an enhanced PDF experience. This experience includes richer rendering, improved performance, strong security for PDF file handling, and greater accessibility.\n\nIf this policy is specified for an application, it is possible that it may impact other related applications as well. The policy is applied to all WebView2s sharing the same WebView2 user data folder. These WebView2s could potentially belong to multiple applications if those applications, which are likely from the same product family, are designed to share the same user data folder.\n\nUse a name-value pair to enable the new PDF reader for the application. Set the name to the Application User Model ID or the executable file name. You can use the \"\\*\" wildcard as value name to apply to all applications. Set the Value to true to enable the new reader or set it to false to use the existing one.\n\nIf you enable this policy for the specified WebView2 applications, they will use the new Adobe Acrobat powered PDF reader to open all PDF files.\n\nIf you disable the policy for the specified WebView2 applications or don't configure it, they will use the existing PDF reader to open all PDF files.\n\nExample value:\n\n{\"name\": \"app1.exe\", \"value\": true}\n{\"name\": \"app\\_id\\_for\\_app2\", \"value\": true}\n{\"name\": \"\\*\", \"value\": false}","DataType":"Unknown","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"NewPDFReaderWebView2List","DefaultValue":null,"ValueKind":"N/A"}},"RSAKeyUsageForLocalAnchorsEnabled":{"Name":"RSAKeyUsageForLocalAnchorsEnabled","ShortDescription":"Check RSA key usage for server certificates issued by local trust anchors (obsolete)","SupportVersion":"Microsoft Edge version 123-135, Windows 7 or later","Description":"OBSOLETE: This policy is obsolete and doesn't work after Microsoft Edge 135.\n\nThe X.509 key usage extension declares how the key in a certificate can be\nused. These instructions ensure certificates aren't used in an unintended\ncontext, which protects against a class of cross-protocol attacks on HTTPS and\nother protocols. HTTPS clients must verify that server certificates match the\nconnection's TLS parameters.\n\nStarting in Microsoft Edge 124, this\ncheck is always enabled.\n\nMicrosoft Edge 123 and earlier have the\nfollowing behavior:\n\nIf this policy is set to enabled,\nMicrosoft Edge will perform this key\ncheck. This helps prevent attacks where an attacker manipulates the browser into\ninterpreting a key in ways that the certificate owner did not intend.\n\nIf this policy is set to disabled,\nMicrosoft Edge will skip this key check in\nHTTPS connections that negotiate TLS 1.2 and use an RSA certificate that\nchains to a local trust anchor. Examples of local trust anchors include\npolicy-provided or user-installed root certificates. In all other cases, the\ncheck is performed independent of this policy's setting.\n\nIf this policy is not configured,\nMicrosoft Edge will behave as if the\npolicy is enabled.\n\nThis policy is available for administrators to preview the behavior of a\nfuture release, which will enable this check by default. At that point, this\npolicy will remain temporarily available for administrators that need more\ntime to update their certificates to meet the new RSA key usage requirements.\n\nConnections that fail this check will fail with the error\nERR\\_SSL\\_KEY\\_USAGE\\_INCOMPATIBLE. Sites that fail with this error likely have a\nmisconfigured certificate. Modern ECDHE\\_RSA cipher suites use the\n\"digitalSignature\" key usage option, while legacy RSA decryption cipher suites\nuse the \"keyEncipherment\" key usage option. If uncertain, administrators should\ninclude both in RSA certificates meant for HTTPS.\n\nThe policy has been obsoleted starting from Microsoft Edge version 136,\nbut the key check has been always enabled since Microsoft Edge version 124.","DataType":"Boolean","DataOptions":null,"DynamicRefresh":"Unknown","Registry":{"CanMandatory":true,"CanRecommended":false,"MandatoryPath":"Software\\Policies\\Microsoft\\Edge\\WebView2","RecommendedPath":"N/A","Name":"RSAKeyUsageForLocalAnchorsEnabled","DefaultValue":null,"ValueKind":"REG_DWORD"}}}